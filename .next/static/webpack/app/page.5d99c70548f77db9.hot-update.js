"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/content.ts":
/*!************************!*\
  !*** ./lib/content.ts ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   posts: function() { return /* binding */ posts; },\n/* harmony export */   projects: function() { return /* binding */ projects; }\n/* harmony export */ });\nconst posts = [\n    {\n        id: \"building-scalable-applications\",\n        title: \"Building Scalable Applications with Next.js\",\n        description: \"Learn how to build scalable applications using Next.js and React\",\n        date: \"2024-03-20\",\n        featured: true,\n        content: \"...\"\n    },\n    {\n        id: \"understanding-typescript\",\n        title: \"Understanding TypeScript's Type System\",\n        description: \"A deep dive into TypeScript's powerful type system\",\n        date: \"2024-03-15\",\n        featured: true,\n        content: \"...\"\n    },\n    {\n        id: \"modern-state-management\",\n        title: \"Modern State Management in React\",\n        description: \"Exploring modern state management solutions in React\",\n        date: \"2024-03-10\",\n        content: \"...\"\n    },\n    {\n        id: \"case-study-scalable-lms\",\n        title: \"\\uD83C\\uDF93 Case Study: Building a Scalable LMS from Scratch\",\n        description: \"How I helped build a robust, scalable LMS using the PERN stack and Kafka\",\n        date: \"2025-04-06\",\n        featured: true,\n        content: \"\\n**Project Overview**\\n\\nIn this project, our team set out to build a Learning Management System (LMS) from the ground up. The goal was to create a platform capable of handling a growing number of users (students, trainers, and admins), while offering interactive learning experiences, content control mechanisms, and a robust backend infrastructure.\\n\\nI was onboarded as a Backend Developer, responsible for designing and implementing a scalable, efficient, and maintainable backend system using the **PERN stack** (PostgreSQL, Express, React, Node.js) and **Kafka** for asynchronous event handling.\\n\\n---\\n\\n**Problem Statement**\\n\\n- Designing an architecture that could scale with user growth and high traffic surges.\\n- Managing different user roles (students, trainers, admins) with dynamic access and content workflows.\\n- Implementing real-time interactions and personalized learning features.\\n- Ensuring clean, maintainable code with complete API documentation for collaboration and future scaling.\\n\\n---\\n\\n**My Contribution**\\n\\n- Designed and built key backend modules\\n- Set up database schemas and relationships\\n- Integrated event-driven features using Kafka\\n- Provided robust API documentation\\n- Collaborated cross-functionally with front-end and DevOps teams\\n\\n---\\n\\n**Key Backend Features & Technical Contributions**\\n\\n\\uD83C\\uDFD7️ **Modular Architecture Design**\\n\\n- Used Node.js and Express, structured with SOLID principles.\\n- Logical service segregation:\\n  - Course/content delivery\\n  - Enrollment tracking\\n  - Trainer-student workflows\\n  - Admin dashboard & analytics\\n\\n\\uD83D\\uDC65 **Role-Based Access Control (RBAC)**\\n\\n- JWT-based secure auth\\n- Middleware for dynamic access control\\n\\n\\uD83D\\uDCDA **Admin-Driven Content Management**\\n\\n- Create, update, publish courses\\n- Moderate interactions\\n- View analytics\\n\\n\\uD83D\\uDCAC **Interactive Learning Features**\\n\\n- Comment threads, likes, trainer replies\\n- Lazy loading & pagination\\n\\n⚙️ **Asynchronous Event Handling with Kafka**\\n\\n- Notifications, user activity logging\\n- Non-blocking operations\\n\\n\\uD83D\\uDCC4 **API Documentation**\\n\\n- Documented with Swagger\\n- Boosted frontend collaboration\\n\\n---\\n\\n**Development Practices**\\n\\n- Agile, CI/CD with Docker\\n- Testing with Jest\\n\\n---\\n\\n**Impact & Results**\\n\\n\\uD83D\\uDE80 Scalable to 100s of users  \\n\\uD83D\\uDD10 Secure and reliable  \\n\\uD83D\\uDCAC Higher engagement  \\n\\uD83E\\uDDE9 Modular, dev-friendly code  \\n\\uD83D\\uDCCA Admins empowered with insights\\n\\n---\\n\\n**Key Takeaways**\\n\\n- Scalable architecture starts with the right mindset.\\n- Kafka simplified background tasks and improved UX.\\n- Good documentation and modularity help teams move faster.\\n\"\n    },\n    {\n        id: \"javascript-global-execution-context\",\n        title: \"\\uD83E\\uDDE0 Deep Dive: JavaScript's Global Execution Context\",\n        description: \"Ever wondered how JS hoisting and the TDZ work? This one's for you.\",\n        date: \"2025-04-07\",\n        featured: false,\n        content: '\\nHave you ever wondered how JavaScript handles your code under the hood? The answer lies in the **Global Execution Context (GEC)** — the foundation where everything begins.\\n\\n---\\n\\n### What is the Global Execution Context?\\n\\nWhen JavaScript runs, it creates an execution context to manage the code. The GEC is the first context that is created when:\\n\\n- A JavaScript file is loaded in the browser.\\n- Code is executed in a Node.js environment.\\n\\nIt consists of two critical phases:\\n\\n1. **Memory Creation Phase**\\n2. **Code Execution Phase**\\n\\n---\\n\\n### Phase 1: Memory Creation Phase\\n\\n- `var` variables → memory allocated & initialized as `undefined`\\n- `function` declarations → stored in memory with full definitions\\n- `let` and `const` → memory allocated but not initialized (TDZ)\\n\\n---\\n\\n### Phase 2: Code Execution Phase\\n\\n- Code is executed line by line.\\n- `var` variables get assigned actual values.\\n- `let`/`const` trigger ReferenceError if accessed before init.\\n- Functions declared using the `function` keyword can be invoked early.\\n\\n---\\n\\n### Example:\\n\\n```js\\nvar a = 10;\\nfunction greet() {\\n  console.log(\"hello there\");\\n}\\nconst sayHi = () => {\\n  console.log(\"hi there\");\\n};\\n```\\n\\n#### Behind the Scenes (GEC):\\n\\n**Memory Creation:**\\n\\n- a → `undefined`\\n- greet → full function definition\\n- sayHi → TDZ\\n\\n**Code Execution:**\\n\\n- a = 10\\n- greet() ✅\\n- sayHi() ❌ ReferenceError if called early\\n\\n---\\n\\n### \\uD83D\\uDCA1 Key Takeaways\\n\\n- `var` is hoisted and initialized as `undefined`.\\n- `let`/`const` are hoisted but uninitialized → TDZ.\\n- Function declarations are fully hoisted.\\n- Arrow functions assigned to `const`/let are not callable before definition.\\n\\n---\\n\\n### Wrapping Up\\n\\nUnderstanding the Global Execution Context helps avoid bugs and write smarter JS. Stay tuned for more JS internals! \\uD83D\\uDE80\\n'\n    }\n];\nconst projects = [\n    {\n        id: \"affiliate-ecommerce\",\n        title: \"Affiliate Marketing E-commerce Platform\",\n        description: \"Built an SEO-friendly affiliate-based e-commerce platform integrated with external product APIs and analytics dashboard.\",\n        link: \"http://www.dealsmocktail.com\"\n    },\n    {\n        id: \"startup-portfolio\",\n        title: \"Startup Portfolio Website\",\n        description: \"Developed a sleek and fast-loading portfolio website for a tech startup to showcase products and services effectively.\",\n        link: \"https://www.qubicgen.com\"\n    },\n    {\n        id: \"housing-assist\",\n        title: \"Abroad Housing Assistance Platform\",\n        description: \"Built a housing portal to help Indian students and professionals find verified accommodation abroad.\",\n        link: \"https://www.melodymocktail.com\",\n        featured: true\n    },\n    {\n        id: \"edtech-lms\",\n        title: \"Learning Management System (LMS)\",\n        description: \"A custom LMS built from scratch for an EdTech platform focusing on scalability, course management, and real-time reporting.\",\n        caseStudy: \"https://medium.com/@workwithmanojsravan/case-study-building-a-scalable-learning-management-system-lms-from-scratch-6e60ca8222a9\",\n        featured: true\n    }\n];\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/content.ts\n"));

/***/ })

});